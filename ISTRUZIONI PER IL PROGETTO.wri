README file for Programming Assignment 2 (Java edition)
=======================================================

Your directory should now contain the following files:

 javadoc dei sorgenti.html
 cool.lex.SKEL
 test.cl.SKEL
 AbstractSymbol.java  
 BoolConst.java       
 Flags.java           
 IdSymbol.java        
 IdTable.java         
 IntSymbol.java       
 IntTable.java        
 Lexer.java           
 AbstractTable.java   
 StringSymbol.java    
 StringTable.java     
 Utilities.java       
 TokenConstants.java  
 *.java		      other generated files



	Parte dell'assignment è anche quello di creare un file di testo annotazioni_lexer.txt 
	con varie vostre annotazioni riguardo il progetto. (Vedi formato a fine file)
	riguardo il proprio progetto. Dovete descrivere le vostre decisioni di progetto,
	spiegare perchè il vostro codice è corretto, e perchè i vostri casi di 
	di test sono adeguati. Fa parte dell'assignment spiegare tutto ciò in questo
	file chiaramente ed in modo conciso così come aggiungere commenti al vostro
	codice.

Descrizione dei files da modificare:
------------------------------------

	cool.lex.SKEL is a skeleton file for the specification of the
	lexical analyzer. You should complete it with your regular
	expressions, patterns and actions. Information on how to do this
	is in the jflex manual.

	test.cl is a COOL program that you can test the lexical
	analyzer on. It contains some errors. However, test.cl does not exercise all lexical
	constructs of COOL and part of your assignment is to rewrite
	test.cl with a complete set of tests for your lexical analyzer.

Descrizione dei files di supporto da NON MODIFICARE:
---------------------------------------------------

	Di questi files è disponibile la documentazione javadoc all'indirizzo

	http://www.stanford.edu/class/cs143/javadoc/cool_ast

	TokenConstants.java contains constant definitions that are used by
	almost all parts of the compiler. DO NOT MODIFY.

	*Table.java and *Symbol.java contain string table data
	structures.  DO NOT MODIFY.

	Utilities.java contains various support functions used by the
	main lexer driver (Lexer.java).  DO NOT MODIFY.

	Lexer.java contains the main method which will call your lexer
	and print out the tokens that it returns.  DO NOT MODIFY.

        CoolLexer.java is the scanner generated by jflex from cool.lex.
        DO NOT MODIFY IT, as your changes will be overritten the next
        time you run jflex.

	mycoolc is a shell script that glues together the phases of the
	compiler using Unix pipes instead of statically linking code.  
	While inefficient, this architecture makes it easy to mix and match
	the components you write with those of the course compiler.
	DO NOT MODIFY.	

Istruzioni
------------

	Per compilare il vostro Lexer potete utilizzare Eclipse o lavorare manualmente
     o sotto Linux.

	In entrambi i casi dovete utilizzare la libreria esterna inclusa in questa cartella

	java-cup-11a.jar  

	
Da consegnare (In un unico file zippato) sulla piattaforma
-----------------------------------------------------------
	1. annotazioni_lexer.wri
	2. il file lexer.jar eseguibile ed 
	3. una cartella zippata contenente tutti i sorgenti necessari per creare 
	    l'eseguibile (incluso la libreria esterna) e nient'altro. 
	4. i casi di test

La cartella al punto 3 e le istruzioni contenute nel file annotazioni_lexer.wri dovranno essere 
sufficienti per creare lexer.jar


---8<------8<------8<------8<---cut here---8<------8<------8<------8<---


ANNOTAZIONI AGGIUNTE DAGLI STUDENTI:

Nomi e cognomi degli studenti coinvolti

Testo delle annotazioni:

1. scelte di progetto ed implementazione

2. descrizione dei propri test e perchè sono adeguati

3. breve convincimento che il codice prodotto è corretto

4. istruzioni su come compilare ed eseguire il proprio lexer


